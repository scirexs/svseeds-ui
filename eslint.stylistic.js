import stylistic from "@stylistic/eslint-plugin";
import ts from "typescript-eslint";

export default ts.config(
  {
    plugins: { "@stylistic": stylistic },
    rules: {
      "@stylistic/array-bracket-spacing": ["error", "never"],
      "@stylistic/arrow-spacing": ["error", {
        before: true,
        after: true,
      }],
      "@stylistic/block-spacing": ["error", "always"],
      "@stylistic/brace-style": ["error", "1tbs", { allowSingleLine: true }],
      "@stylistic/comma-dangle": ["error", "always-multiline"],
      "@stylistic/comma-spacing": ["error", {
        before: false,
        after: true,
      }],
      "@stylistic/comma-style": ["error", "last"],
      "@stylistic/computed-property-spacing": ["error", "never"],
      "@stylistic/dot-location": ["error", "property"],
      "@stylistic/eol-last": ["error", "always"],
      "@stylistic/function-call-argument-newline": ["error", "consistent"],
      "@stylistic/function-call-spacing": ["error", "never"],
      "@stylistic/function-paren-newline": ["error", "consistent"],
      "@stylistic/generator-star-spacing": ["error", {
        before: true,
        after: false,
      }],
      "@stylistic/implicit-arrow-linebreak": ["error", "beside"],
      "@stylistic/indent": ["error", 2],
      "@stylistic/indent-binary-ops": ["error", 2],
      "@stylistic/key-spacing": ["error", {
        beforeColon: false,
        afterColon: true,
        mode: "strict",
      }],
      "@stylistic/keyword-spacing": ["error", {
        before: true,
        after: true,
      }],
      "@stylistic/linebreak-style": ["error", "unix"],
      "@stylistic/lines-around-comment": ["error", { beforeBlockComment: true }],
      "@stylistic/max-len": ["error", {
        code: 140,
        ignoreComments: true,
        ignoreUrls: true,
        ignorePattern: "^import|\\$props\\(\\);$|^\\s*<.+>$",
      }],
      "@stylistic/max-statements-per-line": ["error", {
        max: 2,
        ignoredNodes: ["BreakStatement"],
      }],
      "@stylistic/multiline-comment-style": ["error", "separate-lines"],
      "@stylistic/multiline-ternary": ["error", "never"],
      "@stylistic/new-parens": ["error", "always"],
      "@stylistic/newline-per-chained-call": ["error", { ignoreChainWithDepth: 3 }],
      "@stylistic/no-confusing-arrow": "error",
      "@stylistic/no-extra-parens": ["error", "all", {
        nestedBinaryExpressions: false,
        ternaryOperandBinaryExpressions: false,
        enforceForNewInMemberExpressions: false,
        enforceForArrowConditionals: false,
        nestedConditionalExpressions: false,
      }],
      "@stylistic/no-extra-semi": "error",
      "@stylistic/no-floating-decimal": "error",
      "@stylistic/no-mixed-operators": "error",
      "@stylistic/no-mixed-spaces-and-tabs": "error",
      "@stylistic/no-multi-spaces": ["error", { ignoreEOLComments: true }],
      "@stylistic/no-multiple-empty-lines": ["error", {
        max: 2,
        maxEOF: 1,
        maxBOF: 0,
      }],
      "@stylistic/no-tabs": "error",
      "@stylistic/no-trailing-spaces": "error",
      "@stylistic/no-whitespace-before-property": "error",
      "@stylistic/nonblock-statement-body-position": ["error", "beside"],
      "@stylistic/object-curly-spacing": ["error", "always"],
      "@stylistic/object-property-newline": ["error", { allowAllPropertiesOnSameLine: true }],
      "@stylistic/one-var-declaration-per-line": ["error", "initializations"],
      "@stylistic/operator-linebreak": ["error", "before"],
      "@stylistic/padded-blocks": ["error", "never"],
      "@stylistic/quote-props": ["error", "as-needed"],
      "@stylistic/quotes": ["error", "double"],
      "@stylistic/rest-spread-spacing": ["error", "never"],
      "@stylistic/semi": ["error", "always"],
      "@stylistic/semi-spacing": ["error", {
        before: false,
        after: true,
      }],
      "@stylistic/semi-style": ["error", "last"],
      "@stylistic/space-before-blocks": ["error", "always"],
      "@stylistic/space-before-function-paren": ["error", {
        anonymous: "never",
        named: "never",
        asyncArrow: "always",
      }],
      "@stylistic/space-in-parens": ["error", "never"],
      "@stylistic/space-infix-ops": "error",
      "@stylistic/space-unary-ops": ["error", {
        words: true,
        nonwords: false,
      }],
      "@stylistic/spaced-comment": ["error", "always", { exceptions: ["-"] }],
      "@stylistic/switch-colon-spacing": ["error", {
        before: false,
        after: true,
      }],
      "@stylistic/template-curly-spacing": ["error", "never"],
      "@stylistic/template-tag-spacing": ["error", "never"],
      "@stylistic/type-generic-spacing": "error",
      "@stylistic/type-named-tuple-spacing": "error",
      "@stylistic/wrap-iife": ["error", "outside"],
      "@stylistic/yield-star-spacing": ["error", "after"],
    },
  },
);

